import os
from psdaq.procmgr.ProcMgr import getRelEnvString

platform = '6'
username = 'lcls2'
expname  = 'expname'
expnum   = 'expnum'

epics_host = 'daq-tst-dev02'

# can also set this environment in the shell.
os.environ['TESTRELDIR'] = '/reg/neh/home/cpo/git/lcls2/install'

conda_env = getRelEnvString()
epics_env = 'EPICS_CA_ADDR_LIST=10.0.3.255 EPICS_CA_SERVER_PORT=5066 EPICS_CA_REPEATER_PORT=5067 EPICS_CA_AUTO_ADDR_LIST=NO '+conda_env
pcas_env = 'EPICS_CA_SERVER_PORT=5066 EPICS_CA_REPEATER_PORT=5067 EPICS_CAS_INTF_ADDR_LIST=10.0.0.2 '+conda_env
shelf = '2'
ip_addr = '10.0.'+shelf

# procmgr FLAGS: <port number> static port number to keep executable
#                              running across multiple start/stop commands.
#                "X" open xterm
#                "s" send signal to child when stopping
#
# HOST       UNIQUEID      FLAGS  COMMAND+ARGS
# list of processes to run
#   required fields: id, cmd
#   optional fields: host, port, flags
#     flags:
#        'x' or 'X'  -> xterm: open small or large xterm for process console
#        's'         -> stop: sends ctrl-c to process
#        'u'         -> uniqueid: use 'id' as detector alias (supported by acq, cam, camedt, evr, and simcam)

procmgr_config = [
 { host: epics_host,  id:'dticas', flags:'s', env:pcas_env, cmd:'dticas -P DAQ:TEST:DTI:'+shelf},
 { host: epics_host,  id:'dtiioc-106', flags:'s', env:epics_env, cmd:'dtiPVs -a '+ip_addr+'.106 -P DAQ:TEST:DTI:'+shelf+':6' },
 { id:'dtica', flags:'s', env:epics_env, cmd:'dtica DAQ:TEST:DTI:'+shelf},

## procstat
 {                    id:'procstat',    flags:'s',  env:conda_env, cmd:'procstat -t '+username+' -e0 -n none -p '+platform+' p'+platform+'.cnf.last'},
  ]
