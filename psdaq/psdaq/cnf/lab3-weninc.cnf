platform = '2'
username = 'lcls2'
expname  = 'expname'
expnum   = 'expnum'

epics_env = 'EPICS_PVA_ADDR_LIST=172.21.42.255'
conda_rel = 'ps-2.0.0'

shelf = '2'
ip_addr = '10.0.'+shelf

# procmgr FLAGS: <port number> static port number to keep executable
#                              running across multiple start/stop commands.
#                "X" open xterm
#                "s" send signal to child when stopping
#
# HOST       UNIQUEID      FLAGS  COMMAND+ARGS
# list of processes to run
#   required fields: id, cmd
#   optional fields: host, port, flags, conda, env, rtprio
#     flags:
#        'x' or 'X'  -> xterm: open small or large xterm for process console
#        's'         -> stop: sends ctrl-c to process
#        'u'         -> uniqueid: use 'id' as detector alias (supported by acq, cam, camedt, evr, and simcam)

procmgr_config = [
 { id:'partca-'+platform ,flags:'s', conda:conda_rel, env:epics_env, cmd:'partca DAQ:LAB2:PART:'+platform},
 { id:'procstat', flags:'sp', conda:conda_rel, cmd:'procstat -t '+username+' -e0 -n none p'+platform+'.cnf.last'},
 { id:'modca1'  ,flags:'s', conda:conda_rel, env:epics_env, cmd:'modca DAQ:LAB2:XPM:1'},
 { id:'modca2'  ,flags:'s', conda:conda_rel, env:epics_env, cmd:'modca DAQ:LAB2:XPM:2'},
 { host: 'drp-tst-acc06', id:'Collection', flags:'sxp', conda:conda_rel, env:epics_env, cmd:'collection -v' },
 { host: 'daq-tst-dev02', id:'ts_proxy', flags:'sp', conda:conda_rel, env:epics_env, cmd:'ts_proxy -v -C drp-tst-acc06 DAQ:LAB2:PART:'+platform},
 { host: 'drp-tst-dev001', id:'teb1', flags:'sxp', conda:conda_rel, env:epics_env, cmd:'tstEbBuilder -C drp-tst-acc06 -Z psmetric04' }
 #{ host: 'drp-tst-dev002', id:'drp1', flags:'sxp', conda:conda_rel, env:epics_env, cmd:'drp -C drp-tst-acc06 -D AreaDetector -o /tmp' },
# { host: 'drp-tst-dev003', id:'drp2', flags:'sxp', conda:conda_rel, env:epics_env, cmd:'drp -C drp-tst-acc06 -D AreaDetector -o /tmp' },
]
