platform = '1'
username = 'lcls2'
expname  = 'expname'
expnum   = 'expnum'

epics_env = 'EPICS_CA_ADDR_LIST=10.0.3.255 EPICS_CA_SERVER_PORT=5066 EPICS_CA_REPEATER_PORT=5067 EPICS_CA_AUTO_ADDR_LIST=NO'
conda_rel = 'ps-0.1.2'

shelf = '2'
ip_addr = '10.0.'+shelf
collect_host = 'drp-tst-acc06'

# procmgr FLAGS: <port number> static port number to keep executable
#                              running across multiple start/stop commands.
#
# HOST       UNIQUEID      FLAGS  COMMAND+ARGS
# list of processes to run
#   required fields: id, cmd
#   optional fields: host, port, flags, conda, env, rtprio
#     flags:
#        'x' or 'X'  -> xterm: open small or large xterm for process console
#        's'         -> stop: sends ctrl-c to process
#        'u'         -> uniqueid: use 'id' as detector alias (supported by acq, cam, camedt, evr, and simcam)

procmgr_config = [
 {                        id:'partca-'+platform, conda:conda_rel, env:epics_env, cmd:'partca DAQ:LAB2:PART:'+platform},
 {                        id:'procstat', flags:'p', conda:conda_rel, cmd:'procstat -t '+username+' -e0 -n none p'+platform+'.cnf.last'},
 {                        id:'modca', conda:conda_rel, env:epics_env, cmd:'xpmca DAQ:LAB2:XPM:'+shelf},
 {                        id:'deadca-'+platform, conda:conda_rel, env:epics_env, cmd:'deadca DAQ:LAB2 '+platform+' '+shelf},
 {                        id:'dtica', conda:conda_rel, env:epics_env, cmd:'dtica DAQ:LAB2:DTI:'+shelf},
 { host: collect_host,    id:'collection', flags:'sxp', conda:conda_rel, cmd:'collection -v'},
 { host: 'daq-tst-dev02', id:'dti_proxy', flags:'sp', conda:conda_rel, env:epics_env, cmd:'dti_proxy -v -C '+collect_host+' DAQ:LAB2:PART:'+platform},
 # trigger event builder
 { host: 'drp-tst-acc02', id:'teb1', flags:'sp', conda:conda_rel, cmd:'tstEbBuilder -C '+collect_host}
]
